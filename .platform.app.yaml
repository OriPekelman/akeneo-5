name: app

type: php:7.4

dependencies:
    php:
        composer/composer: '^2'
    nodejs:
        yarn: "*"

runtime:
    extensions:
        - apcu
        - imagick
        - memcached
        - intl
        - exif
        - newrelic
        - opcache
relationships:
    database: "db:mysql"
    essearch: "search:elasticsearch"

web:
    locations:
        "/":
            root: 'public'
            passthru: '/index.php'

disk: 1024

variables:
    env:
        APP_ENV: 'prod'
        APP_DEBUG: 0
        APP_DEFAULT_LOCALE: 'en'
        APP_PRODUCT_AND_PRODUCT_MODEL_INDEX_NAME: 'akeneo_pim_product_and_product_model'
        APP_CONNECTION_ERROR_INDEX_NAME: 'akeneo_connectivity_connection_error'
        # Update these for your desired NVM and Node versions.
        NVM_VERSION: v0.36.0
        NODE_VERSION: v14.13.1
    php:
        apc.enable_cli: 1
        opcache.max_accelerated_files: 13000
        opcache.memory_consumption: 96
        opcache.validate_timestamps: 0

mounts:
    "var":
        source: local
        source_path: "var"
    # Used to control the Platform.sh install process. Do not delete the file inside it.
    "installer":
        source: local
        source_path: "installer"
    "web":
        source: local
        source_path: "web"
    "config/secrets":
        source: local
        source_path: "config/secrets"
    # This mount is not listed in the Akeneo documentation, but is required for the
    # Doctrine portion of the installer.
    "upgrades":
        source: local
        source_path: "upgrades"
    # For media files
    "public/media":
        source: local
        source_path: "public/media"
    # For local generated files
    "var/file_storage":
        source: local
        source_path: "var/file_storage"
    # Sharing job files
    "var/file_storage/archive/export":
        source: service
        service: jobs
        source_path: "var/file_storage/archive/export"
    "var/file_storage/jobs":
        source: service
        service: jobs
        source_path: "var/file_storage/jobs"
    "var/logs":
        source: service
        service: jobs
        source_path: "var/logs"
    # Sharing export files
    "public/media/exports":
        source: service
        service: jobs
        source_path: "public/media/exports"

hooks:
    build: |
        set -e

        curl -sS https://platform.sh/cli/installer | php

        # Install nvm to use newer version of node.
        unset NPM_CONFIG_PREFIX
        export NVM_DIR="$PLATFORM_APP_DIR/.nvm"
        # install.sh will automatically install NodeJS based on the presence of $NODE_VERSION
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh | bash
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

        # install current ghostscript
        wget https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs9540/ghostscript-9.54.0-linux-x86_64.tgz
        tar zxvf ghostscript-9.54.0-linux-x86_64.tgz
        mv /app/ghostscript-9.54.0-linux-x86_64/gs-9540-linux-x86_64 /app/ghostscript-9.54.0-linux-x86_64/gs
        export PATH=/app/ghostscript-9.54.0-linux-x86_64/:$PATH

        echo "Installing Node dependencies"
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1 yarn install

        # Needed for Lando to play nice. Unclear why.
        mkdir -p .nvm

        # The PHP parts of the installer require booting Akeneo, which requires all
        # of these be set even though they're never used. This is an Akeneo bug but
        # one that is easy enough to work around.
        export APP_DATABASE_HOST='database.local'
        export APP_DATABASE_PORT=3600
        export APP_DATABASE_NAME=main
        export APP_DATABASE_USER=main
        export APP_DATABASE_PASSWORD=''
        export APP_INDEX_HOSTS='essearch.local'
        export APP_SECRET=$PLATFORM_PROJECT_ENTROPY

        echo "Installing assets"
        php bin/console pim:installer:assets --symlink --clean

        echo "Building DSM"
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1 yarnpkg --cwd=vendor/akeneo/pim-community-dev/akeneo-design-system install --frozen-lockfile
        yarnpkg --cwd=vendor/akeneo/pim-community-dev/akeneo-design-system run lib:build

        echo "Running webpack"
        rm -rf public/dist/*
        yarnpkg run less
        yarnpkg run webpack
        yarnpkg run update-extensions

    deploy: |
        set -e

        echo "Warming cache"
        rm -rf var/cache/*
        php bin/console cache:warmup

        # run installer if no lockfile exists
        if [ ! -f installer/.platform.installed ]; then
            echo "Running command line installer..."
            bin/console pim:installer:db --env=prod --catalog vendor/akeneo/pim-community-dev/src/Akeneo/Platform/Bundle/InstallerBundle/Resources/fixtures/minimal
            # Change the user and password immediately after creating the site!
            bin/console pim:user:create -n --admin admin admin admin@example.com Admin Istrator en_US
            touch installer/.platform.installed
        fi

crons:
    snapshot:
        spec: '0 3 * * *'
        cmd: |
            if [ "$PLATFORM_BRANCH" = master ]; then
                platform snapshot:create --yes --no-wait
            fi

    sync:
        spec: '30 3 * * *'
        cmd: |
            if [ "$PLATFORM_BRANCH" = develop ]; then
                platform sync data --no-wait
            fi

    renewcert:
        # Force a redeploy at 1 am (UTC) on the 1st and 15th of every month.
        spec: '0 1 1,15 * *'
        cmd: |
            if [ "$PLATFORM_BRANCH" = master ]; then
                platform redeploy --yes --no-wait
            fi

    refresh:
        spec: '30 1 * * *'
        cmd: 'php bin/console pim:versioning:refresh'

    purge_versioning:
        spec: '30 2 * * *'
        cmd: 'php bin/console pim:versioning:purge --more-than-days 360'

    update_data:
        spec: '1 * * * *'
        cmd: 'php bin/console akeneo:connectivity-audit:update-data'

    purge_jobs:
        spec: '20 0 1 * *'
        cmd: 'php bin/console akeneo:batch:purge-job-execution'

    aggregate:
        spec: '30 4 * * *'
        cmd: 'php bin/console pim:volume:aggregate'

workers:
    queue:
        disk: 512
        commands:
            start: |
                php /app/bin/console akeneo:batch:job-queue-consumer-daemon
